# ===============================
# subdomain: HTTP → HTTPS redirect
# ===============================
<VirtualHost *:80>
    ServerName scatter.goldenarbitrage.net

    ProxyPreserveHost On
    # Normal HTTP proxy for other requests
    ProxyPass / http://127.0.0.1:3333/
    ProxyPassReverse / http://127.0.0.1:3333/

    DocumentRoot /var/www/html

    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

    # Redirect HTTP to HTTPS
    RewriteEngine On
    RewriteCond %{SERVER_NAME} =scatter.goldenarbitrage.net    
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
    
    #RewriteCond %{HTTPS} !=on
    #RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]

    # Static file caching
    <FilesMatch "\.(js|css|jpg|jpeg|png|gif|ico|svg|json)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # Gzip compression
    <IfModule mod_deflate.c>
        AddOutputFilterByType DEFLATE text/html text/css application/javascript application/json image/svg+xml
    </IfModule>

    # CORS for subdomain
    <IfModule mod_headers.c>
        Header set Access-Control-Allow-Origin "*"
    </IfModule>

    ErrorLog ${APACHE_LOG_DIR}/80-scatter-goldenarbitrage.net-error.log
    CustomLog ${APACHE_LOG_DIR}/80-scatter-goldenarbitrage.net-access.log combined
    Redirect permanent / https://scatter.goldenarbitrage.net/
</VirtualHost>

# ===============================
# subdomain: HTTPS
# ===============================
<VirtualHost *:443>
    ServerName scatter.goldenarbitrage.net

    # ── SSL Setup ──
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/scatter.goldenarbitrage.net/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/scatter.goldenarbitrage.net/privkey.pem
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    Include /etc/letsencrypt/options-ssl-apache.conf

    # ── Reverse Proxy for HTTP (FastAPI API endpoints) ──
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:3333/
    ProxyPassReverse / http://127.0.0.1:3333/
    # ── Reverse Proxy for WebSocket (/ws endpoint) ──
    RewriteEngine On
    # WebSocket upgrade
    RewriteCond %{HTTP:Upgrade} =websocket [NC]
    RewriteRule ^/ws/(.*)$ ws://127.0.0.1:3333/ws/$1 [P,L]
    # Normal HTTP fallback
    RewriteCond %{HTTP:Upgrade} !=websocket [NC]
    RewriteRule ^/ws/(.*)$ http://127.0.0.1:3333/ws/$1 [P,L]
    # ProxyPassReverse for HTTP responses
    ProxyPassReverse /ws/ http://127.0.0.1:3333/ws/
    
    DocumentRoot /var/www/html

    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

    # Static file caching
    <FilesMatch "\.(js|css|jpg|jpeg|png|gif|ico|svg|json)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # Gzip compression
    <IfModule mod_deflate.c>
        AddOutputFilterByType DEFLATE text/html text/css application/javascript application/json image/svg+xml
    </IfModule>

    # CORS for subdomain
    <IfModule mod_headers.c>
        Header set Access-Control-Allow-Origin "*"
    </IfModule>

    # ── Logging (optional) ──
    ErrorLog ${APACHE_LOG_DIR}/443-scatter-goldenarbitrage.net-error.log
    CustomLog ${APACHE_LOG_DIR}/443-scatter-goldenarbitrage.net-access.log combined
</VirtualHost>
